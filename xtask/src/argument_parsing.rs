use crate::{cargo_command::CargoCommand, Target, ARMV6M, ARMV7M, ARMV8MBASE, ARMV8MMAIN};
use clap::{Args, Parser, Subcommand};
use core::fmt;

#[derive(clap::ValueEnum, Copy, Clone, Debug)]
pub enum Package {
    Rtic,
    RticCommon,
    RticMacros,
    RticMonotonics,
    RticSync,
    RticTime,
}

impl fmt::Display for Package {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "{}", self.name())
    }
}

impl Package {
    pub fn name(&self) -> String {
        let name = match self {
            Package::Rtic => "rtic",
            Package::RticCommon => "rtic-common",
            Package::RticMacros => "rtic-macros",
            Package::RticMonotonics => "rtic-monotonics",
            Package::RticSync => "rtic-sync",
            Package::RticTime => "rtic-time",
        };

        name.to_string()
    }

    pub fn all() -> Vec<Self> {
        vec![
            Self::Rtic,
            Self::RticCommon,
            Self::RticMacros,
            Self::RticMonotonics,
            Self::RticSync,
            Self::RticTime,
        ]
    }

    /// Get the features needed given the selected package
    ///
    /// Without package specified the features for RTIC are required
    /// With only a single package which is not RTIC, no special
    /// features are needed
    pub fn features(
        &self,
        target: Target,
        backend: Backends,
        partial: bool,
    ) -> Vec<Option<String>> {
        match self {
            Package::Rtic => vec![Some(target.and_features(backend.to_rtic_feature()))],
            Package::RticMacros => {
                vec![Some(backend.to_rtic_macros_feature().to_string())]
            }
            Package::RticMonotonics => {
                let features = if partial {
                    &["cortex-m-systick", "rp2040", "nrf52840"][..]
                } else {
                    &rtic_monotonic_features::FEATURES[..]
                };

                features
                    .into_iter()
                    .map(ToString::to_string)
                    .map(Some)
                    .chain(std::iter::once(None))
                    .collect()
            }
            Package::RticSync => vec![Some("unstable".to_string()), None],
            _ => vec![None],
        }
    }
}

pub struct TestMetadata {}

impl TestMetadata {
    pub fn match_package(package: Package, backend: Backends) -> CargoCommand<'static> {
        match package {
            Package::Rtic => {
                let features = format!(
                    "{},{}",
                    backend.to_rtic_feature(),
                    backend.to_rtic_uitest_feature()
                );
                let features = Some(backend.to_target().and_features(&features));
                CargoCommand::Test {
                    package: Some(package.name()),
                    features,
                    test: Some("ui".to_owned()),
                    deny_warnings: true,
                }
            }
            Package::RticMacros => CargoCommand::Test {
                package: Some(package.name()),
                features: Some(backend.to_rtic_macros_feature().to_owned()),
                test: None,
                deny_warnings: true,
            },
            Package::RticSync => CargoCommand::Test {
                package: Some(package.name()),
                features: Some("testing".to_owned()),
                test: None,
                deny_warnings: true,
            },
            Package::RticCommon => CargoCommand::Test {
                package: Some(package.name()),
                features: Some("testing".to_owned()),
                test: None,
                deny_warnings: true,
            },
            Package::RticMonotonics => CargoCommand::Test {
                package: Some(package.name()),
                features: None,
                test: None,
                deny_warnings: true,
            },
            Package::RticTime => CargoCommand::Test {
                package: Some(package.name()),
                features: Some("critical-section/std".into()),
                test: None,
                deny_warnings: true,
            },
        }
    }
}

#[derive(clap::ValueEnum, Copy, Clone, Default, Debug)]
pub enum Backends {
    Thumbv6,
    #[default]
    Thumbv7,
    Thumbv8Base,
    Thumbv8Main,
}

impl Backends {
    #[allow(clippy::wrong_self_convention)]
    pub fn to_target(&self) -> Target<'static> {
        match self {
            Backends::Thumbv6 => ARMV6M,
            Backends::Thumbv7 => ARMV7M,
            Backends::Thumbv8Base => ARMV8MBASE,
            Backends::Thumbv8Main => ARMV8MMAIN,
        }
    }

    #[allow(clippy::wrong_self_convention)]
    pub fn to_rtic_feature(&self) -> &'static str {
        match self {
            Backends::Thumbv6 => "thumbv6-backend",
            Backends::Thumbv7 => "thumbv7-backend",
            Backends::Thumbv8Base => "thumbv8base-backend",
            Backends::Thumbv8Main => "thumbv8main-backend",
        }
    }
    #[allow(clippy::wrong_self_convention)]
    pub fn to_rtic_macros_feature(&self) -> &'static str {
        match self {
            Backends::Thumbv6 | Backends::Thumbv8Base => "cortex-m-source-masking",
            Backends::Thumbv7 | Backends::Thumbv8Main => "cortex-m-basepri",
        }
    }
    #[allow(clippy::wrong_self_convention)]
    pub fn to_rtic_uitest_feature(&self) -> &'static str {
        match self {
            Backends::Thumbv6 | Backends::Thumbv8Base => "rtic-uitestv6",
            Backends::Thumbv7 | Backends::Thumbv8Main => "rtic-uitestv7",
        }
    }
}

#[derive(Copy, Clone, Default, Debug)]
pub enum BuildOrCheck {
    #[default]
    Check,
    Build,
}

#[derive(Parser, Clone)]
pub struct Globals {
    /// Error out on warnings
    #[arg(short = 'D', long)]
    pub deny_warnings: bool,

    /// For which backend to build.
    #[arg(value_enum, short, default_value = "thumbv7", long, global = true)]
    pub backend: Option<Backends>,

    /// List of comma separated examples to include, all others are excluded
    ///
    /// If omitted all examples are included
    ///
    /// Example: `cargo xtask --example complex,spawn,init`
    /// would include complex, spawn and init
    #[arg(short, long, group = "example_group", global = true)]
    pub example: Option<String>,

    /// List of comma separated examples to exclude, all others are included
    ///
    /// If omitted all examples are included
    ///
    /// Example: `cargo xtask --excludeexample complex,spawn,init`
    /// would exclude complex, spawn and init
    #[arg(long, group = "example_group", global = true)]
    pub exampleexclude: Option<String>,

    /// Enable more verbose output, repeat up to `-vvv` for even more
    #[arg(short, long, action = clap::ArgAction::Count, global = true)]
    pub verbose: u8,

    /// Enable `stderr` inheritance on child processes.
    ///
    /// If this flag is enabled, the output of `stderr` produced by child
    /// processes is printed directly to `stderr`. This will cause a lot of
    /// clutter, but can make debugging long-running processes a lot easier.
    #[arg(short, long, global = true)]
    pub stderr_inherited: bool,

    /// Don't build/check/test all feature combinations that are available, only
    /// a necessary subset.
    #[arg(long, global = true)]
    pub partial: bool,
}

#[derive(Parser)]
#[command(author, version, about, long_about = None)]
/// RTIC xtask powered testing toolbox
pub struct Cli {
    #[clap(flatten)]
    pub globals: Globals,

    /// Subcommand selecting operation
    #[command(subcommand)]
    pub command: Commands,
}

#[derive(Debug, Clone, Subcommand)]
pub enum Commands {
    /// Format code
    #[clap(alias = "fmt")]
    Format(FormatOpt),

    /// Run clippy
    Clippy(PackageOpt),

    /// Check all packages
    Check(PackageOpt),

    /// Build all packages
    Build(PackageOpt),

    /// Check all examples
    ExampleCheck,

    /// Build all examples
    ExampleBuild,

    /// Run `cargo size` on selected or all examples
    ///
    /// To pass options to `cargo size`, add `--` and then the following
    /// arguments will be passed on
    ///
    /// Example: `cargo xtask size -- -A`
    Size(Arg),

    /// Run examples in QEMU and compare against expected output
    ///
    /// Example runtime output is matched against `rtic/ci/expected/`
    ///
    /// Requires that an ARM target is selected
    Qemu(QemuAndRun),

    /// Run examples through embedded-ci and compare against expected output
    ///
    /// unimplemented!() For now TODO, equal to Qemu
    ///
    /// Example runtime output is matched against `rtic/ci/expected/`
    ///
    /// Requires that an ARM target is selected
    Run(QemuAndRun),

    /// Build docs
    ///
    /// To pass options to `cargo doc`, add `--` and then the following
    /// arguments will be passed on
    ///
    /// Example: `cargo xtask doc -- --open`
    Doc(Arg),

    /// Run tests
    Test(PackageOpt),

    /// Build books with mdbook
    Book(Arg),

    /// Check one or more usage examples.
    ///
    /// Usage examples are located in ./examples
    UsageExampleCheck(UsageExamplesOpt),

    /// Build one or more usage examples.
    ///
    /// Usage examples are located in ./examples
    #[clap(alias = "./examples")]
    UsageExampleBuild(UsageExamplesOpt),
}

#[derive(Args, Clone, Debug)]
pub struct UsageExamplesOpt {
    /// The usage examples to build. All usage examples are selected if this argument is not provided.
    ///
    /// Example: `rp2040_local_i2c_init,stm32f3_blinky`.
    examples: Option<String>,
}

impl UsageExamplesOpt {
    pub fn examples(&self) -> anyhow::Result<Vec<String>> {
        let usage_examples: Vec<_> = std::fs::read_dir("./examples")?
            .filter_map(Result::ok)
            .filter(|p| p.metadata().ok().map(|p| p.is_dir()).unwrap_or(false))
            .filter_map(|p| p.file_name().to_str().map(ToString::to_string))
            .collect();

        let selected_examples: Option<Vec<String>> = self
            .examples
            .clone()
            .map(|s| s.split(",").map(ToString::to_string).collect());

        if let Some(selected_examples) = selected_examples {
            if let Some(unfound_example) = selected_examples
                .iter()
                .find(|e| !usage_examples.contains(e))
            {
                Err(anyhow::anyhow!(
                    "Usage example {unfound_example} does not exist"
                ))
            } else {
                Ok(selected_examples)
            }
        } else {
            Ok(usage_examples)
        }
    }
}

#[derive(Args, Debug, Clone)]
pub struct FormatOpt {
    #[clap(flatten)]
    pub package: PackageOpt,
    /// Check-only, do not apply formatting fixes.
    #[clap(short, long)]
    pub check: bool,
}

#[derive(Args, Debug, Clone)]
/// Restrict to package, or run on whole workspace
pub struct PackageOpt {
    /// For which package/workspace member to operate
    ///
    /// If omitted, work on all
    package: Option<Package>,
}

impl PackageOpt {
    #[cfg(not(feature = "rayon"))]
    pub fn packages(&self) -> impl Iterator<Item = Package> {
        self.package
            .map(|p| vec![p])
            .unwrap_or(Package::all())
            .into_iter()
    }

    #[cfg(feature = "rayon")]
    pub fn packages(&self) -> impl rayon::prelude::ParallelIterator<Item = Package> {
        use rayon::prelude::*;
        self.package
            .map(|p| vec![p])
            .unwrap_or(Package::all())
            .into_par_iter()
    }
}

#[derive(Args, Debug, Clone)]
pub struct QemuAndRun {
    /// If expected output is missing or mismatching, recreate the file
    ///
    /// This overwrites only missing or mismatching
    #[arg(long)]
    pub overwrite_expected: bool,
}

#[derive(Debug, Parser, Clone)]
pub struct Arg {
    /// Options to pass to `cargo size`
    #[command(subcommand)]
    pub arguments: Option<ExtraArguments>,
}

#[derive(Clone, Debug, PartialEq, Parser)]
pub enum ExtraArguments {
    /// All remaining flags and options
    #[command(external_subcommand)]
    Other(Vec<String>),
}

impl core::fmt::Display for ExtraArguments {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        match self {
            ExtraArguments::Other(args) => {
                write!(f, "{}", args.join(" "))
            }
        }
    }
}

mod rtic_monotonic_features {
    pub const FEATURES: &'static [&'static str] = &[
        "cortex-m-systick,embedded-hal-async",
        "cortex-m-systick,systick-100hz,embedded-hal-async",
        "cortex-m-systick,systick-10khz,embedded-hal-async",
        "cortex-m-systick,embedded-hal-async,systick-64bit",
        "cortex-m-systick,systick-100hz,embedded-hal-async,systick-64bit",
        "cortex-m-systick,systick-10khz,embedded-hal-async,systick-64bit",
        "rp2040,embedded-hal-async",
        "nrf52810,embedded-hal-async",
        "nrf52811,embedded-hal-async",
        "nrf52832,embedded-hal-async",
        "nrf52833,embedded-hal-async",
        "nrf52840,embedded-hal-async",
        "nrf5340-app,embedded-hal-async",
        "nrf5340-net,embedded-hal-async",
        "nrf9160,embedded-hal-async",
        "imxrt_gpt1,imxrt-ral/imxrt1062,embedded-hal-async",
        "stm32l100c6-a,stm32_tim2,embedded-hal-async",
        "stm32l100r8-a,stm32_tim2,embedded-hal-async",
        "stm32l100rb-a,stm32_tim2,embedded-hal-async",
        "stm32l151c6-a,stm32_tim2,embedded-hal-async",
        "stm32l151c8-a,stm32_tim2,embedded-hal-async",
        "stm32l151cb-a,stm32_tim2,embedded-hal-async",
        "stm32l151r6-a,stm32_tim2,embedded-hal-async",
        "stm32l151r8-a,stm32_tim2,embedded-hal-async",
        "stm32l151rb-a,stm32_tim2,embedded-hal-async",
        "stm32l151rc-a,stm32_tim2,embedded-hal-async",
        "stm32l151v8-a,stm32_tim2,embedded-hal-async",
        "stm32l151vb-a,stm32_tim2,embedded-hal-async",
        "stm32l151vc-a,stm32_tim2,embedded-hal-async",
        "stm32l151vd-x,stm32_tim2,embedded-hal-async",
        "stm32l152c6-a,stm32_tim2,embedded-hal-async",
        "stm32l152c8-a,stm32_tim2,embedded-hal-async",
        "stm32l152cb-a,stm32_tim2,embedded-hal-async",
        "stm32l152r6-a,stm32_tim2,embedded-hal-async",
        "stm32l152r8-a,stm32_tim2,embedded-hal-async",
        "stm32l152rb-a,stm32_tim2,embedded-hal-async",
        "stm32l152rc-a,stm32_tim2,embedded-hal-async",
        "stm32l152v8-a,stm32_tim2,embedded-hal-async",
        "stm32l152vb-a,stm32_tim2,embedded-hal-async",
        "stm32l152vc-a,stm32_tim2,embedded-hal-async",
        "stm32l152vd-x,stm32_tim2,embedded-hal-async",
        "stm32l162rc-a,stm32_tim2,embedded-hal-async",
        "stm32l162vc-a,stm32_tim2,embedded-hal-async",
        "stm32l162vd-x,stm32_tim2,embedded-hal-async",
        "stm32h745bg-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745bg-cm4,stm32_tim2,embedded-hal-async",
        "stm32h745bi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745bi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h745ig-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745ig-cm4,stm32_tim2,embedded-hal-async",
        "stm32h745ii-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745ii-cm4,stm32_tim2,embedded-hal-async",
        "stm32h745xg-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745xg-cm4,stm32_tim2,embedded-hal-async",
        "stm32h745xi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745xi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h745zg-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745zg-cm4,stm32_tim2,embedded-hal-async",
        "stm32h745zi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h745zi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747ag-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747ag-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747ai-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747ai-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747bg-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747bg-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747bi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747bi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747ig-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747ig-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747ii-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747ii-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747xg-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747xg-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747xi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747xi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h747zi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h747zi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h755bi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h755bi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h755ii-cm7,stm32_tim2,embedded-hal-async",
        "stm32h755ii-cm4,stm32_tim2,embedded-hal-async",
        "stm32h755xi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h755xi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h755zi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h755zi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h757ai-cm7,stm32_tim2,embedded-hal-async",
        "stm32h757ai-cm4,stm32_tim2,embedded-hal-async",
        "stm32h757bi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h757bi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h757ii-cm7,stm32_tim2,embedded-hal-async",
        "stm32h757ii-cm4,stm32_tim2,embedded-hal-async",
        "stm32h757xi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h757xi-cm4,stm32_tim2,embedded-hal-async",
        "stm32h757zi-cm7,stm32_tim2,embedded-hal-async",
        "stm32h757zi-cm4,stm32_tim2,embedded-hal-async",
        "stm32c011d6,stm32_tim2,embedded-hal-async",
        "stm32c011f4,stm32_tim2,embedded-hal-async",
        "stm32c011f6,stm32_tim2,embedded-hal-async",
        "stm32c011j4,stm32_tim2,embedded-hal-async",
        "stm32c011j6,stm32_tim2,embedded-hal-async",
        "stm32c031c4,stm32_tim2,embedded-hal-async",
        "stm32c031c6,stm32_tim2,embedded-hal-async",
        "stm32c031f4,stm32_tim2,embedded-hal-async",
        "stm32c031f6,stm32_tim2,embedded-hal-async",
        "stm32c031g4,stm32_tim2,embedded-hal-async",
        "stm32c031g6,stm32_tim2,embedded-hal-async",
        "stm32c031k4,stm32_tim2,embedded-hal-async",
        "stm32c031k6,stm32_tim2,embedded-hal-async",
        "stm32f030c6,stm32_tim2,embedded-hal-async",
        "stm32f030c8,stm32_tim2,embedded-hal-async",
        "stm32f030cc,stm32_tim2,embedded-hal-async",
        "stm32f030f4,stm32_tim2,embedded-hal-async",
        "stm32f030k6,stm32_tim2,embedded-hal-async",
        "stm32f030r8,stm32_tim2,embedded-hal-async",
        "stm32f030rc,stm32_tim2,embedded-hal-async",
        "stm32f031c4,stm32_tim2,embedded-hal-async",
        "stm32f031c6,stm32_tim2,embedded-hal-async",
        "stm32f031e6,stm32_tim2,embedded-hal-async",
        "stm32f031f4,stm32_tim2,embedded-hal-async",
        "stm32f031f6,stm32_tim2,embedded-hal-async",
        "stm32f031g4,stm32_tim2,embedded-hal-async",
        "stm32f031g6,stm32_tim2,embedded-hal-async",
        "stm32f031k4,stm32_tim2,embedded-hal-async",
        "stm32f031k6,stm32_tim2,embedded-hal-async",
        "stm32f038c6,stm32_tim2,embedded-hal-async",
        "stm32f038e6,stm32_tim2,embedded-hal-async",
        "stm32f038f6,stm32_tim2,embedded-hal-async",
        "stm32f038g6,stm32_tim2,embedded-hal-async",
        "stm32f038k6,stm32_tim2,embedded-hal-async",
        "stm32f042c4,stm32_tim2,embedded-hal-async",
        "stm32f042c6,stm32_tim2,embedded-hal-async",
        "stm32f042f4,stm32_tim2,embedded-hal-async",
        "stm32f042f6,stm32_tim2,embedded-hal-async",
        "stm32f042g4,stm32_tim2,embedded-hal-async",
        "stm32f042g6,stm32_tim2,embedded-hal-async",
        "stm32f042k4,stm32_tim2,embedded-hal-async",
        "stm32f042k6,stm32_tim2,embedded-hal-async",
        "stm32f042t6,stm32_tim2,embedded-hal-async",
        "stm32f048c6,stm32_tim2,embedded-hal-async",
        "stm32f048g6,stm32_tim2,embedded-hal-async",
        "stm32f048t6,stm32_tim2,embedded-hal-async",
        "stm32f051c4,stm32_tim2,embedded-hal-async",
        "stm32f051c6,stm32_tim2,embedded-hal-async",
        "stm32f051c8,stm32_tim2,embedded-hal-async",
        "stm32f051k4,stm32_tim2,embedded-hal-async",
        "stm32f051k6,stm32_tim2,embedded-hal-async",
        "stm32f051k8,stm32_tim2,embedded-hal-async",
        "stm32f051r4,stm32_tim2,embedded-hal-async",
        "stm32f051r6,stm32_tim2,embedded-hal-async",
        "stm32f051r8,stm32_tim2,embedded-hal-async",
        "stm32f051t8,stm32_tim2,embedded-hal-async",
        "stm32f058c8,stm32_tim2,embedded-hal-async",
        "stm32f058r8,stm32_tim2,embedded-hal-async",
        "stm32f058t8,stm32_tim2,embedded-hal-async",
        "stm32f070c6,stm32_tim2,embedded-hal-async",
        "stm32f070cb,stm32_tim2,embedded-hal-async",
        "stm32f070f6,stm32_tim2,embedded-hal-async",
        "stm32f070rb,stm32_tim2,embedded-hal-async",
        "stm32f071c8,stm32_tim2,embedded-hal-async",
        "stm32f071cb,stm32_tim2,embedded-hal-async",
        "stm32f071rb,stm32_tim2,embedded-hal-async",
        "stm32f071v8,stm32_tim2,embedded-hal-async",
        "stm32f071vb,stm32_tim2,embedded-hal-async",
        "stm32f072c8,stm32_tim2,embedded-hal-async",
        "stm32f072cb,stm32_tim2,embedded-hal-async",
        "stm32f072r8,stm32_tim2,embedded-hal-async",
        "stm32f072rb,stm32_tim2,embedded-hal-async",
        "stm32f072v8,stm32_tim2,embedded-hal-async",
        "stm32f072vb,stm32_tim2,embedded-hal-async",
        "stm32f078cb,stm32_tim2,embedded-hal-async",
        "stm32f078rb,stm32_tim2,embedded-hal-async",
        "stm32f078vb,stm32_tim2,embedded-hal-async",
        "stm32f091cb,stm32_tim2,embedded-hal-async",
        "stm32f091cc,stm32_tim2,embedded-hal-async",
        "stm32f091rb,stm32_tim2,embedded-hal-async",
        "stm32f091rc,stm32_tim2,embedded-hal-async",
        "stm32f091vb,stm32_tim2,embedded-hal-async",
        "stm32f091vc,stm32_tim2,embedded-hal-async",
        "stm32f098cc,stm32_tim2,embedded-hal-async",
        "stm32f098rc,stm32_tim2,embedded-hal-async",
        "stm32f098vc,stm32_tim2,embedded-hal-async",
        "stm32f100c4,stm32_tim2,embedded-hal-async",
        "stm32f100c6,stm32_tim2,embedded-hal-async",
        "stm32f100c8,stm32_tim2,embedded-hal-async",
        "stm32f100cb,stm32_tim2,embedded-hal-async",
        "stm32f100r4,stm32_tim2,embedded-hal-async",
        "stm32f100r6,stm32_tim2,embedded-hal-async",
        "stm32f100r8,stm32_tim2,embedded-hal-async",
        "stm32f100rb,stm32_tim2,embedded-hal-async",
        "stm32f100rc,stm32_tim2,embedded-hal-async",
        "stm32f100rd,stm32_tim2,embedded-hal-async",
        "stm32f100re,stm32_tim2,embedded-hal-async",
        "stm32f100v8,stm32_tim2,embedded-hal-async",
        "stm32f100vb,stm32_tim2,embedded-hal-async",
        "stm32f100vc,stm32_tim2,embedded-hal-async",
        "stm32f100vd,stm32_tim2,embedded-hal-async",
        "stm32f100ve,stm32_tim2,embedded-hal-async",
        "stm32f100zc,stm32_tim2,embedded-hal-async",
        "stm32f100zd,stm32_tim2,embedded-hal-async",
        "stm32f100ze,stm32_tim2,embedded-hal-async",
        "stm32f101c4,stm32_tim2,embedded-hal-async",
        "stm32f101c6,stm32_tim2,embedded-hal-async",
        "stm32f101c8,stm32_tim2,embedded-hal-async",
        "stm32f101cb,stm32_tim2,embedded-hal-async",
        "stm32f101r4,stm32_tim2,embedded-hal-async",
        "stm32f101r6,stm32_tim2,embedded-hal-async",
        "stm32f101r8,stm32_tim2,embedded-hal-async",
        "stm32f101rb,stm32_tim2,embedded-hal-async",
        "stm32f101rc,stm32_tim2,embedded-hal-async",
        "stm32f101rd,stm32_tim2,embedded-hal-async",
        "stm32f101re,stm32_tim2,embedded-hal-async",
        "stm32f101rf,stm32_tim2,embedded-hal-async",
        "stm32f101rg,stm32_tim2,embedded-hal-async",
        "stm32f101t4,stm32_tim2,embedded-hal-async",
        "stm32f101t6,stm32_tim2,embedded-hal-async",
        "stm32f101t8,stm32_tim2,embedded-hal-async",
        "stm32f101tb,stm32_tim2,embedded-hal-async",
        "stm32f101v8,stm32_tim2,embedded-hal-async",
        "stm32f101vb,stm32_tim2,embedded-hal-async",
        "stm32f101vc,stm32_tim2,embedded-hal-async",
        "stm32f101vd,stm32_tim2,embedded-hal-async",
        "stm32f101ve,stm32_tim2,embedded-hal-async",
        "stm32f101vf,stm32_tim2,embedded-hal-async",
        "stm32f101vg,stm32_tim2,embedded-hal-async",
        "stm32f101zc,stm32_tim2,embedded-hal-async",
        "stm32f101zd,stm32_tim2,embedded-hal-async",
        "stm32f101ze,stm32_tim2,embedded-hal-async",
        "stm32f101zf,stm32_tim2,embedded-hal-async",
        "stm32f101zg,stm32_tim2,embedded-hal-async",
        "stm32f102c4,stm32_tim2,embedded-hal-async",
        "stm32f102c6,stm32_tim2,embedded-hal-async",
        "stm32f102c8,stm32_tim2,embedded-hal-async",
        "stm32f102cb,stm32_tim2,embedded-hal-async",
        "stm32f102r4,stm32_tim2,embedded-hal-async",
        "stm32f102r6,stm32_tim2,embedded-hal-async",
        "stm32f102r8,stm32_tim2,embedded-hal-async",
        "stm32f102rb,stm32_tim2,embedded-hal-async",
        "stm32f103c4,stm32_tim2,embedded-hal-async",
        "stm32f103c6,stm32_tim2,embedded-hal-async",
        "stm32f103c8,stm32_tim2,embedded-hal-async",
        "stm32f103cb,stm32_tim2,embedded-hal-async",
        "stm32f103r4,stm32_tim2,embedded-hal-async",
        "stm32f103r6,stm32_tim2,embedded-hal-async",
        "stm32f103r8,stm32_tim2,embedded-hal-async",
        "stm32f103rb,stm32_tim2,embedded-hal-async",
        "stm32f103rc,stm32_tim2,embedded-hal-async",
        "stm32f103rd,stm32_tim2,embedded-hal-async",
        "stm32f103re,stm32_tim2,embedded-hal-async",
        "stm32f103rf,stm32_tim2,embedded-hal-async",
        "stm32f103rg,stm32_tim2,embedded-hal-async",
        "stm32f103t4,stm32_tim2,embedded-hal-async",
        "stm32f103t6,stm32_tim2,embedded-hal-async",
        "stm32f103t8,stm32_tim2,embedded-hal-async",
        "stm32f103tb,stm32_tim2,embedded-hal-async",
        "stm32f103v8,stm32_tim2,embedded-hal-async",
        "stm32f103vb,stm32_tim2,embedded-hal-async",
        "stm32f103vc,stm32_tim2,embedded-hal-async",
        "stm32f103vd,stm32_tim2,embedded-hal-async",
        "stm32f103ve,stm32_tim2,embedded-hal-async",
        "stm32f103vf,stm32_tim2,embedded-hal-async",
        "stm32f103vg,stm32_tim2,embedded-hal-async",
        "stm32f103zc,stm32_tim2,embedded-hal-async",
        "stm32f103zd,stm32_tim2,embedded-hal-async",
        "stm32f103ze,stm32_tim2,embedded-hal-async",
        "stm32f103zf,stm32_tim2,embedded-hal-async",
        "stm32f103zg,stm32_tim2,embedded-hal-async",
        "stm32f105r8,stm32_tim2,embedded-hal-async",
        "stm32f105rb,stm32_tim2,embedded-hal-async",
        "stm32f105rc,stm32_tim2,embedded-hal-async",
        "stm32f105v8,stm32_tim2,embedded-hal-async",
        "stm32f105vb,stm32_tim2,embedded-hal-async",
        "stm32f105vc,stm32_tim2,embedded-hal-async",
        "stm32f107rb,stm32_tim2,embedded-hal-async",
        "stm32f107rc,stm32_tim2,embedded-hal-async",
        "stm32f107vb,stm32_tim2,embedded-hal-async",
        "stm32f107vc,stm32_tim2,embedded-hal-async",
        "stm32f205rb,stm32_tim2,embedded-hal-async",
        "stm32f205rc,stm32_tim2,embedded-hal-async",
        "stm32f205re,stm32_tim2,embedded-hal-async",
        "stm32f205rf,stm32_tim2,embedded-hal-async",
        "stm32f205rg,stm32_tim2,embedded-hal-async",
        "stm32f205vb,stm32_tim2,embedded-hal-async",
        "stm32f205vc,stm32_tim2,embedded-hal-async",
        "stm32f205ve,stm32_tim2,embedded-hal-async",
        "stm32f205vf,stm32_tim2,embedded-hal-async",
        "stm32f205vg,stm32_tim2,embedded-hal-async",
        "stm32f205zc,stm32_tim2,embedded-hal-async",
        "stm32f205ze,stm32_tim2,embedded-hal-async",
        "stm32f205zf,stm32_tim2,embedded-hal-async",
        "stm32f205zg,stm32_tim2,embedded-hal-async",
        "stm32f207ic,stm32_tim2,embedded-hal-async",
        "stm32f207ie,stm32_tim2,embedded-hal-async",
        "stm32f207if,stm32_tim2,embedded-hal-async",
        "stm32f207ig,stm32_tim2,embedded-hal-async",
        "stm32f207vc,stm32_tim2,embedded-hal-async",
        "stm32f207ve,stm32_tim2,embedded-hal-async",
        "stm32f207vf,stm32_tim2,embedded-hal-async",
        "stm32f207vg,stm32_tim2,embedded-hal-async",
        "stm32f207zc,stm32_tim2,embedded-hal-async",
        "stm32f207ze,stm32_tim2,embedded-hal-async",
        "stm32f207zf,stm32_tim2,embedded-hal-async",
        "stm32f207zg,stm32_tim2,embedded-hal-async",
        "stm32f215re,stm32_tim2,embedded-hal-async",
        "stm32f215rg,stm32_tim2,embedded-hal-async",
        "stm32f215ve,stm32_tim2,embedded-hal-async",
        "stm32f215vg,stm32_tim2,embedded-hal-async",
        "stm32f215ze,stm32_tim2,embedded-hal-async",
        "stm32f215zg,stm32_tim2,embedded-hal-async",
        "stm32f217ie,stm32_tim2,embedded-hal-async",
        "stm32f217ig,stm32_tim2,embedded-hal-async",
        "stm32f217ve,stm32_tim2,embedded-hal-async",
        "stm32f217vg,stm32_tim2,embedded-hal-async",
        "stm32f217ze,stm32_tim2,embedded-hal-async",
        "stm32f217zg,stm32_tim2,embedded-hal-async",
        "stm32f301c6,stm32_tim2,embedded-hal-async",
        "stm32f301c8,stm32_tim2,embedded-hal-async",
        "stm32f301k6,stm32_tim2,embedded-hal-async",
        "stm32f301k8,stm32_tim2,embedded-hal-async",
        "stm32f301r6,stm32_tim2,embedded-hal-async",
        "stm32f301r8,stm32_tim2,embedded-hal-async",
        "stm32f302c6,stm32_tim2,embedded-hal-async",
        "stm32f302c8,stm32_tim2,embedded-hal-async",
        "stm32f302cb,stm32_tim2,embedded-hal-async",
        "stm32f302cc,stm32_tim2,embedded-hal-async",
        "stm32f302k6,stm32_tim2,embedded-hal-async",
        "stm32f302k8,stm32_tim2,embedded-hal-async",
        "stm32f302r6,stm32_tim2,embedded-hal-async",
        "stm32f302r8,stm32_tim2,embedded-hal-async",
        "stm32f302rb,stm32_tim2,embedded-hal-async",
        "stm32f302rc,stm32_tim2,embedded-hal-async",
        "stm32f302rd,stm32_tim2,embedded-hal-async",
        "stm32f302re,stm32_tim2,embedded-hal-async",
        "stm32f302vb,stm32_tim2,embedded-hal-async",
        "stm32f302vc,stm32_tim2,embedded-hal-async",
        "stm32f302vd,stm32_tim2,embedded-hal-async",
        "stm32f302ve,stm32_tim2,embedded-hal-async",
        "stm32f302zd,stm32_tim2,embedded-hal-async",
        "stm32f302ze,stm32_tim2,embedded-hal-async",
        "stm32f303c6,stm32_tim2,embedded-hal-async",
        "stm32f303c8,stm32_tim2,embedded-hal-async",
        "stm32f303cb,stm32_tim2,embedded-hal-async",
        "stm32f303cc,stm32_tim2,embedded-hal-async",
        "stm32f303k6,stm32_tim2,embedded-hal-async",
        "stm32f303k8,stm32_tim2,embedded-hal-async",
        "stm32f303r6,stm32_tim2,embedded-hal-async",
        "stm32f303r8,stm32_tim2,embedded-hal-async",
        "stm32f303rb,stm32_tim2,embedded-hal-async",
        "stm32f303rc,stm32_tim2,embedded-hal-async",
        "stm32f303rd,stm32_tim2,embedded-hal-async",
        "stm32f303re,stm32_tim2,embedded-hal-async",
        "stm32f303vb,stm32_tim2,embedded-hal-async",
        "stm32f303vc,stm32_tim2,embedded-hal-async",
        "stm32f303vd,stm32_tim2,embedded-hal-async",
        "stm32f303ve,stm32_tim2,embedded-hal-async",
        "stm32f303zd,stm32_tim2,embedded-hal-async",
        "stm32f303ze,stm32_tim2,embedded-hal-async",
        "stm32f318c8,stm32_tim2,embedded-hal-async",
        "stm32f318k8,stm32_tim2,embedded-hal-async",
        "stm32f328c8,stm32_tim2,embedded-hal-async",
        "stm32f334c4,stm32_tim2,embedded-hal-async",
        "stm32f334c6,stm32_tim2,embedded-hal-async",
        "stm32f334c8,stm32_tim2,embedded-hal-async",
        "stm32f334k4,stm32_tim2,embedded-hal-async",
        "stm32f334k6,stm32_tim2,embedded-hal-async",
        "stm32f334k8,stm32_tim2,embedded-hal-async",
        "stm32f334r6,stm32_tim2,embedded-hal-async",
        "stm32f334r8,stm32_tim2,embedded-hal-async",
        "stm32f358cc,stm32_tim2,embedded-hal-async",
        "stm32f358rc,stm32_tim2,embedded-hal-async",
        "stm32f358vc,stm32_tim2,embedded-hal-async",
        "stm32f373c8,stm32_tim2,embedded-hal-async",
        "stm32f373cb,stm32_tim2,embedded-hal-async",
        "stm32f373cc,stm32_tim2,embedded-hal-async",
        "stm32f373r8,stm32_tim2,embedded-hal-async",
        "stm32f373rb,stm32_tim2,embedded-hal-async",
        "stm32f373rc,stm32_tim2,embedded-hal-async",
        "stm32f373v8,stm32_tim2,embedded-hal-async",
        "stm32f373vb,stm32_tim2,embedded-hal-async",
        "stm32f373vc,stm32_tim2,embedded-hal-async",
        "stm32f378cc,stm32_tim2,embedded-hal-async",
        "stm32f378rc,stm32_tim2,embedded-hal-async",
        "stm32f378vc,stm32_tim2,embedded-hal-async",
        "stm32f398ve,stm32_tim2,embedded-hal-async",
        "stm32f401cb,stm32_tim2,embedded-hal-async",
        "stm32f401cc,stm32_tim2,embedded-hal-async",
        "stm32f401cd,stm32_tim2,embedded-hal-async",
        "stm32f401ce,stm32_tim2,embedded-hal-async",
        "stm32f401rb,stm32_tim2,embedded-hal-async",
        "stm32f401rc,stm32_tim2,embedded-hal-async",
        "stm32f401rd,stm32_tim2,embedded-hal-async",
        "stm32f401re,stm32_tim2,embedded-hal-async",
        "stm32f401vb,stm32_tim2,embedded-hal-async",
        "stm32f401vc,stm32_tim2,embedded-hal-async",
        "stm32f401vd,stm32_tim2,embedded-hal-async",
        "stm32f401ve,stm32_tim2,embedded-hal-async",
        "stm32f405oe,stm32_tim2,embedded-hal-async",
        "stm32f405og,stm32_tim2,embedded-hal-async",
        "stm32f405rg,stm32_tim2,embedded-hal-async",
        "stm32f405vg,stm32_tim2,embedded-hal-async",
        "stm32f405zg,stm32_tim2,embedded-hal-async",
        "stm32f407ie,stm32_tim2,embedded-hal-async",
        "stm32f407ig,stm32_tim2,embedded-hal-async",
        "stm32f407ve,stm32_tim2,embedded-hal-async",
        "stm32f407vg,stm32_tim2,embedded-hal-async",
        "stm32f407ze,stm32_tim2,embedded-hal-async",
        "stm32f407zg,stm32_tim2,embedded-hal-async",
        "stm32f410c8,stm32_tim2,embedded-hal-async",
        "stm32f410cb,stm32_tim2,embedded-hal-async",
        "stm32f410r8,stm32_tim2,embedded-hal-async",
        "stm32f410rb,stm32_tim2,embedded-hal-async",
        "stm32f410t8,stm32_tim2,embedded-hal-async",
        "stm32f410tb,stm32_tim2,embedded-hal-async",
        "stm32f411cc,stm32_tim2,embedded-hal-async",
        "stm32f411ce,stm32_tim2,embedded-hal-async",
        "stm32f411rc,stm32_tim2,embedded-hal-async",
        "stm32f411re,stm32_tim2,embedded-hal-async",
        "stm32f411vc,stm32_tim2,embedded-hal-async",
        "stm32f411ve,stm32_tim2,embedded-hal-async",
        "stm32f412ce,stm32_tim2,embedded-hal-async",
        "stm32f412cg,stm32_tim2,embedded-hal-async",
        "stm32f412re,stm32_tim2,embedded-hal-async",
        "stm32f412rg,stm32_tim2,embedded-hal-async",
        "stm32f412ve,stm32_tim2,embedded-hal-async",
        "stm32f412vg,stm32_tim2,embedded-hal-async",
        "stm32f412ze,stm32_tim2,embedded-hal-async",
        "stm32f412zg,stm32_tim2,embedded-hal-async",
        "stm32f413cg,stm32_tim2,embedded-hal-async",
        "stm32f413ch,stm32_tim2,embedded-hal-async",
        "stm32f413mg,stm32_tim2,embedded-hal-async",
        "stm32f413mh,stm32_tim2,embedded-hal-async",
        "stm32f413rg,stm32_tim2,embedded-hal-async",
        "stm32f413rh,stm32_tim2,embedded-hal-async",
        "stm32f413vg,stm32_tim2,embedded-hal-async",
        "stm32f413vh,stm32_tim2,embedded-hal-async",
        "stm32f413zg,stm32_tim2,embedded-hal-async",
        "stm32f413zh,stm32_tim2,embedded-hal-async",
        "stm32f415og,stm32_tim2,embedded-hal-async",
        "stm32f415rg,stm32_tim2,embedded-hal-async",
        "stm32f415vg,stm32_tim2,embedded-hal-async",
        "stm32f415zg,stm32_tim2,embedded-hal-async",
        "stm32f417ie,stm32_tim2,embedded-hal-async",
        "stm32f417ig,stm32_tim2,embedded-hal-async",
        "stm32f417ve,stm32_tim2,embedded-hal-async",
        "stm32f417vg,stm32_tim2,embedded-hal-async",
        "stm32f417ze,stm32_tim2,embedded-hal-async",
        "stm32f417zg,stm32_tim2,embedded-hal-async",
        "stm32f423ch,stm32_tim2,embedded-hal-async",
        "stm32f423mh,stm32_tim2,embedded-hal-async",
        "stm32f423rh,stm32_tim2,embedded-hal-async",
        "stm32f423vh,stm32_tim2,embedded-hal-async",
        "stm32f423zh,stm32_tim2,embedded-hal-async",
        "stm32f427ag,stm32_tim2,embedded-hal-async",
        "stm32f427ai,stm32_tim2,embedded-hal-async",
        "stm32f427ig,stm32_tim2,embedded-hal-async",
        "stm32f427ii,stm32_tim2,embedded-hal-async",
        "stm32f427vg,stm32_tim2,embedded-hal-async",
        "stm32f427vi,stm32_tim2,embedded-hal-async",
        "stm32f427zg,stm32_tim2,embedded-hal-async",
        "stm32f427zi,stm32_tim2,embedded-hal-async",
        "stm32f429ag,stm32_tim2,embedded-hal-async",
        "stm32f429ai,stm32_tim2,embedded-hal-async",
        "stm32f429be,stm32_tim2,embedded-hal-async",
        "stm32f429bg,stm32_tim2,embedded-hal-async",
        "stm32f429bi,stm32_tim2,embedded-hal-async",
        "stm32f429ie,stm32_tim2,embedded-hal-async",
        "stm32f429ig,stm32_tim2,embedded-hal-async",
        "stm32f429ii,stm32_tim2,embedded-hal-async",
        "stm32f429ne,stm32_tim2,embedded-hal-async",
        "stm32f429ng,stm32_tim2,embedded-hal-async",
        "stm32f429ni,stm32_tim2,embedded-hal-async",
        "stm32f429ve,stm32_tim2,embedded-hal-async",
        "stm32f429vg,stm32_tim2,embedded-hal-async",
        "stm32f429vi,stm32_tim2,embedded-hal-async",
        "stm32f429ze,stm32_tim2,embedded-hal-async",
        "stm32f429zg,stm32_tim2,embedded-hal-async",
        "stm32f429zi,stm32_tim2,embedded-hal-async",
        "stm32f437ai,stm32_tim2,embedded-hal-async",
        "stm32f437ig,stm32_tim2,embedded-hal-async",
        "stm32f437ii,stm32_tim2,embedded-hal-async",
        "stm32f437vg,stm32_tim2,embedded-hal-async",
        "stm32f437vi,stm32_tim2,embedded-hal-async",
        "stm32f437zg,stm32_tim2,embedded-hal-async",
        "stm32f437zi,stm32_tim2,embedded-hal-async",
        "stm32f439ai,stm32_tim2,embedded-hal-async",
        "stm32f439bg,stm32_tim2,embedded-hal-async",
        "stm32f439bi,stm32_tim2,embedded-hal-async",
        "stm32f439ig,stm32_tim2,embedded-hal-async",
        "stm32f439ii,stm32_tim2,embedded-hal-async",
        "stm32f439ng,stm32_tim2,embedded-hal-async",
        "stm32f439ni,stm32_tim2,embedded-hal-async",
        "stm32f439vg,stm32_tim2,embedded-hal-async",
        "stm32f439vi,stm32_tim2,embedded-hal-async",
        "stm32f439zg,stm32_tim2,embedded-hal-async",
        "stm32f439zi,stm32_tim2,embedded-hal-async",
        "stm32f446mc,stm32_tim2,embedded-hal-async",
        "stm32f446me,stm32_tim2,embedded-hal-async",
        "stm32f446rc,stm32_tim2,embedded-hal-async",
        "stm32f446re,stm32_tim2,embedded-hal-async",
        "stm32f446vc,stm32_tim2,embedded-hal-async",
        "stm32f446ve,stm32_tim2,embedded-hal-async",
        "stm32f446zc,stm32_tim2,embedded-hal-async",
        "stm32f446ze,stm32_tim2,embedded-hal-async",
        "stm32f469ae,stm32_tim2,embedded-hal-async",
        "stm32f469ag,stm32_tim2,embedded-hal-async",
        "stm32f469ai,stm32_tim2,embedded-hal-async",
        "stm32f469be,stm32_tim2,embedded-hal-async",
        "stm32f469bg,stm32_tim2,embedded-hal-async",
        "stm32f469bi,stm32_tim2,embedded-hal-async",
        "stm32f469ie,stm32_tim2,embedded-hal-async",
        "stm32f469ig,stm32_tim2,embedded-hal-async",
        "stm32f469ii,stm32_tim2,embedded-hal-async",
        "stm32f469ne,stm32_tim2,embedded-hal-async",
        "stm32f469ng,stm32_tim2,embedded-hal-async",
        "stm32f469ni,stm32_tim2,embedded-hal-async",
        "stm32f469ve,stm32_tim2,embedded-hal-async",
        "stm32f469vg,stm32_tim2,embedded-hal-async",
        "stm32f469vi,stm32_tim2,embedded-hal-async",
        "stm32f469ze,stm32_tim2,embedded-hal-async",
        "stm32f469zg,stm32_tim2,embedded-hal-async",
        "stm32f469zi,stm32_tim2,embedded-hal-async",
        "stm32f479ag,stm32_tim2,embedded-hal-async",
        "stm32f479ai,stm32_tim2,embedded-hal-async",
        "stm32f479bg,stm32_tim2,embedded-hal-async",
        "stm32f479bi,stm32_tim2,embedded-hal-async",
        "stm32f479ig,stm32_tim2,embedded-hal-async",
        "stm32f479ii,stm32_tim2,embedded-hal-async",
        "stm32f479ng,stm32_tim2,embedded-hal-async",
        "stm32f479ni,stm32_tim2,embedded-hal-async",
        "stm32f479vg,stm32_tim2,embedded-hal-async",
        "stm32f479vi,stm32_tim2,embedded-hal-async",
        "stm32f479zg,stm32_tim2,embedded-hal-async",
        "stm32f479zi,stm32_tim2,embedded-hal-async",
        "stm32f722ic,stm32_tim2,embedded-hal-async",
        "stm32f722ie,stm32_tim2,embedded-hal-async",
        "stm32f722rc,stm32_tim2,embedded-hal-async",
        "stm32f722re,stm32_tim2,embedded-hal-async",
        "stm32f722vc,stm32_tim2,embedded-hal-async",
        "stm32f722ve,stm32_tim2,embedded-hal-async",
        "stm32f722zc,stm32_tim2,embedded-hal-async",
        "stm32f722ze,stm32_tim2,embedded-hal-async",
        "stm32f723ic,stm32_tim2,embedded-hal-async",
        "stm32f723ie,stm32_tim2,embedded-hal-async",
        "stm32f723vc,stm32_tim2,embedded-hal-async",
        "stm32f723ve,stm32_tim2,embedded-hal-async",
        "stm32f723zc,stm32_tim2,embedded-hal-async",
        "stm32f723ze,stm32_tim2,embedded-hal-async",
        "stm32f730i8,stm32_tim2,embedded-hal-async",
        "stm32f730r8,stm32_tim2,embedded-hal-async",
        "stm32f730v8,stm32_tim2,embedded-hal-async",
        "stm32f730z8,stm32_tim2,embedded-hal-async",
        "stm32f732ie,stm32_tim2,embedded-hal-async",
        "stm32f732re,stm32_tim2,embedded-hal-async",
        "stm32f732ve,stm32_tim2,embedded-hal-async",
        "stm32f732ze,stm32_tim2,embedded-hal-async",
        "stm32f733ie,stm32_tim2,embedded-hal-async",
        "stm32f733ve,stm32_tim2,embedded-hal-async",
        "stm32f733ze,stm32_tim2,embedded-hal-async",
        "stm32f745ie,stm32_tim2,embedded-hal-async",
        "stm32f745ig,stm32_tim2,embedded-hal-async",
        "stm32f745ve,stm32_tim2,embedded-hal-async",
        "stm32f745vg,stm32_tim2,embedded-hal-async",
        "stm32f745ze,stm32_tim2,embedded-hal-async",
        "stm32f745zg,stm32_tim2,embedded-hal-async",
        "stm32f746be,stm32_tim2,embedded-hal-async",
        "stm32f746bg,stm32_tim2,embedded-hal-async",
        "stm32f746ie,stm32_tim2,embedded-hal-async",
        "stm32f746ig,stm32_tim2,embedded-hal-async",
        "stm32f746ne,stm32_tim2,embedded-hal-async",
        "stm32f746ng,stm32_tim2,embedded-hal-async",
        "stm32f746ve,stm32_tim2,embedded-hal-async",
        "stm32f746vg,stm32_tim2,embedded-hal-async",
        "stm32f746ze,stm32_tim2,embedded-hal-async",
        "stm32f746zg,stm32_tim2,embedded-hal-async",
        "stm32f750n8,stm32_tim2,embedded-hal-async",
        "stm32f750v8,stm32_tim2,embedded-hal-async",
        "stm32f750z8,stm32_tim2,embedded-hal-async",
        "stm32f756bg,stm32_tim2,embedded-hal-async",
        "stm32f756ig,stm32_tim2,embedded-hal-async",
        "stm32f756ng,stm32_tim2,embedded-hal-async",
        "stm32f756vg,stm32_tim2,embedded-hal-async",
        "stm32f756zg,stm32_tim2,embedded-hal-async",
        "stm32f765bg,stm32_tim2,embedded-hal-async",
        "stm32f765bi,stm32_tim2,embedded-hal-async",
        "stm32f765ig,stm32_tim2,embedded-hal-async",
        "stm32f765ii,stm32_tim2,embedded-hal-async",
        "stm32f765ng,stm32_tim2,embedded-hal-async",
        "stm32f765ni,stm32_tim2,embedded-hal-async",
        "stm32f765vg,stm32_tim2,embedded-hal-async",
        "stm32f765vi,stm32_tim2,embedded-hal-async",
        "stm32f765zg,stm32_tim2,embedded-hal-async",
        "stm32f765zi,stm32_tim2,embedded-hal-async",
        "stm32f767bg,stm32_tim2,embedded-hal-async",
        "stm32f767bi,stm32_tim2,embedded-hal-async",
        "stm32f767ig,stm32_tim2,embedded-hal-async",
        "stm32f767ii,stm32_tim2,embedded-hal-async",
        "stm32f767ng,stm32_tim2,embedded-hal-async",
        "stm32f767ni,stm32_tim2,embedded-hal-async",
        "stm32f767vg,stm32_tim2,embedded-hal-async",
        "stm32f767vi,stm32_tim2,embedded-hal-async",
        "stm32f767zg,stm32_tim2,embedded-hal-async",
        "stm32f767zi,stm32_tim2,embedded-hal-async",
        "stm32f768ai,stm32_tim2,embedded-hal-async",
        "stm32f769ag,stm32_tim2,embedded-hal-async",
        "stm32f769ai,stm32_tim2,embedded-hal-async",
        "stm32f769bg,stm32_tim2,embedded-hal-async",
        "stm32f769bi,stm32_tim2,embedded-hal-async",
        "stm32f769ig,stm32_tim2,embedded-hal-async",
        "stm32f769ii,stm32_tim2,embedded-hal-async",
        "stm32f769ng,stm32_tim2,embedded-hal-async",
        "stm32f769ni,stm32_tim2,embedded-hal-async",
        "stm32f777bi,stm32_tim2,embedded-hal-async",
        "stm32f777ii,stm32_tim2,embedded-hal-async",
        "stm32f777ni,stm32_tim2,embedded-hal-async",
        "stm32f777vi,stm32_tim2,embedded-hal-async",
        "stm32f777zi,stm32_tim2,embedded-hal-async",
        "stm32f778ai,stm32_tim2,embedded-hal-async",
        "stm32f779ai,stm32_tim2,embedded-hal-async",
        "stm32f779bi,stm32_tim2,embedded-hal-async",
        "stm32f779ii,stm32_tim2,embedded-hal-async",
        "stm32f779ni,stm32_tim2,embedded-hal-async",
        "stm32g030c6,stm32_tim2,embedded-hal-async",
        "stm32g030c8,stm32_tim2,embedded-hal-async",
        "stm32g030f6,stm32_tim2,embedded-hal-async",
        "stm32g030j6,stm32_tim2,embedded-hal-async",
        "stm32g030k6,stm32_tim2,embedded-hal-async",
        "stm32g030k8,stm32_tim2,embedded-hal-async",
        "stm32g031c4,stm32_tim2,embedded-hal-async",
        "stm32g031c6,stm32_tim2,embedded-hal-async",
        "stm32g031c8,stm32_tim2,embedded-hal-async",
        "stm32g031f4,stm32_tim2,embedded-hal-async",
        "stm32g031f6,stm32_tim2,embedded-hal-async",
        "stm32g031f8,stm32_tim2,embedded-hal-async",
        "stm32g031g4,stm32_tim2,embedded-hal-async",
        "stm32g031g6,stm32_tim2,embedded-hal-async",
        "stm32g031g8,stm32_tim2,embedded-hal-async",
        "stm32g031j4,stm32_tim2,embedded-hal-async",
        "stm32g031j6,stm32_tim2,embedded-hal-async",
        "stm32g031k4,stm32_tim2,embedded-hal-async",
        "stm32g031k6,stm32_tim2,embedded-hal-async",
        "stm32g031k8,stm32_tim2,embedded-hal-async",
        "stm32g031y8,stm32_tim2,embedded-hal-async",
        "stm32g041c6,stm32_tim2,embedded-hal-async",
        "stm32g041c8,stm32_tim2,embedded-hal-async",
        "stm32g041f6,stm32_tim2,embedded-hal-async",
        "stm32g041f8,stm32_tim2,embedded-hal-async",
        "stm32g041g6,stm32_tim2,embedded-hal-async",
        "stm32g041g8,stm32_tim2,embedded-hal-async",
        "stm32g041j6,stm32_tim2,embedded-hal-async",
        "stm32g041k6,stm32_tim2,embedded-hal-async",
        "stm32g041k8,stm32_tim2,embedded-hal-async",
        "stm32g041y8,stm32_tim2,embedded-hal-async",
        "stm32g050c6,stm32_tim2,embedded-hal-async",
        "stm32g050c8,stm32_tim2,embedded-hal-async",
        "stm32g050f6,stm32_tim2,embedded-hal-async",
        "stm32g050k6,stm32_tim2,embedded-hal-async",
        "stm32g050k8,stm32_tim2,embedded-hal-async",
        "stm32g051c6,stm32_tim2,embedded-hal-async",
        "stm32g051c8,stm32_tim2,embedded-hal-async",
        "stm32g051f6,stm32_tim2,embedded-hal-async",
        "stm32g051f8,stm32_tim2,embedded-hal-async",
        "stm32g051g6,stm32_tim2,embedded-hal-async",
        "stm32g051g8,stm32_tim2,embedded-hal-async",
        "stm32g051k6,stm32_tim2,embedded-hal-async",
        "stm32g051k8,stm32_tim2,embedded-hal-async",
        "stm32g061c6,stm32_tim2,embedded-hal-async",
        "stm32g061c8,stm32_tim2,embedded-hal-async",
        "stm32g061f6,stm32_tim2,embedded-hal-async",
        "stm32g061f8,stm32_tim2,embedded-hal-async",
        "stm32g061g6,stm32_tim2,embedded-hal-async",
        "stm32g061g8,stm32_tim2,embedded-hal-async",
        "stm32g061k6,stm32_tim2,embedded-hal-async",
        "stm32g061k8,stm32_tim2,embedded-hal-async",
        "stm32g070cb,stm32_tim2,embedded-hal-async",
        "stm32g070kb,stm32_tim2,embedded-hal-async",
        "stm32g070rb,stm32_tim2,embedded-hal-async",
        "stm32g071c6,stm32_tim2,embedded-hal-async",
        "stm32g071c8,stm32_tim2,embedded-hal-async",
        "stm32g071cb,stm32_tim2,embedded-hal-async",
        "stm32g071eb,stm32_tim2,embedded-hal-async",
        "stm32g071g6,stm32_tim2,embedded-hal-async",
        "stm32g071g8,stm32_tim2,embedded-hal-async",
        "stm32g071gb,stm32_tim2,embedded-hal-async",
        "stm32g071k6,stm32_tim2,embedded-hal-async",
        "stm32g071k8,stm32_tim2,embedded-hal-async",
        "stm32g071kb,stm32_tim2,embedded-hal-async",
        "stm32g071r6,stm32_tim2,embedded-hal-async",
        "stm32g071r8,stm32_tim2,embedded-hal-async",
        "stm32g071rb,stm32_tim2,embedded-hal-async",
        "stm32g081cb,stm32_tim2,embedded-hal-async",
        "stm32g081eb,stm32_tim2,embedded-hal-async",
        "stm32g081gb,stm32_tim2,embedded-hal-async",
        "stm32g081kb,stm32_tim2,embedded-hal-async",
        "stm32g081rb,stm32_tim2,embedded-hal-async",
        "stm32g0b0ce,stm32_tim2,embedded-hal-async",
        "stm32g0b0ke,stm32_tim2,embedded-hal-async",
        "stm32g0b0re,stm32_tim2,embedded-hal-async",
        "stm32g0b0ve,stm32_tim2,embedded-hal-async",
        "stm32g0b1cb,stm32_tim2,embedded-hal-async",
        "stm32g0b1cc,stm32_tim2,embedded-hal-async",
        "stm32g0b1ce,stm32_tim2,embedded-hal-async",
        "stm32g0b1kb,stm32_tim2,embedded-hal-async",
        "stm32g0b1kc,stm32_tim2,embedded-hal-async",
        "stm32g0b1ke,stm32_tim2,embedded-hal-async",
        "stm32g0b1mb,stm32_tim2,embedded-hal-async",
        "stm32g0b1mc,stm32_tim2,embedded-hal-async",
        "stm32g0b1me,stm32_tim2,embedded-hal-async",
        "stm32g0b1ne,stm32_tim2,embedded-hal-async",
        "stm32g0b1rb,stm32_tim2,embedded-hal-async",
        "stm32g0b1rc,stm32_tim2,embedded-hal-async",
        "stm32g0b1re,stm32_tim2,embedded-hal-async",
        "stm32g0b1vb,stm32_tim2,embedded-hal-async",
        "stm32g0b1vc,stm32_tim2,embedded-hal-async",
        "stm32g0b1ve,stm32_tim2,embedded-hal-async",
        "stm32g0c1cc,stm32_tim2,embedded-hal-async",
        "stm32g0c1ce,stm32_tim2,embedded-hal-async",
        "stm32g0c1kc,stm32_tim2,embedded-hal-async",
        "stm32g0c1ke,stm32_tim2,embedded-hal-async",
        "stm32g0c1mc,stm32_tim2,embedded-hal-async",
        "stm32g0c1me,stm32_tim2,embedded-hal-async",
        "stm32g0c1ne,stm32_tim2,embedded-hal-async",
        "stm32g0c1rc,stm32_tim2,embedded-hal-async",
        "stm32g0c1re,stm32_tim2,embedded-hal-async",
        "stm32g0c1vc,stm32_tim2,embedded-hal-async",
        "stm32g0c1ve,stm32_tim2,embedded-hal-async",
        "stm32g431c6,stm32_tim2,embedded-hal-async",
        "stm32g431c8,stm32_tim2,embedded-hal-async",
        "stm32g431cb,stm32_tim2,embedded-hal-async",
        "stm32g431k6,stm32_tim2,embedded-hal-async",
        "stm32g431k8,stm32_tim2,embedded-hal-async",
        "stm32g431kb,stm32_tim2,embedded-hal-async",
        "stm32g431m6,stm32_tim2,embedded-hal-async",
        "stm32g431m8,stm32_tim2,embedded-hal-async",
        "stm32g431mb,stm32_tim2,embedded-hal-async",
        "stm32g431r6,stm32_tim2,embedded-hal-async",
        "stm32g431r8,stm32_tim2,embedded-hal-async",
        "stm32g431rb,stm32_tim2,embedded-hal-async",
        "stm32g431v6,stm32_tim2,embedded-hal-async",
        "stm32g431v8,stm32_tim2,embedded-hal-async",
        "stm32g431vb,stm32_tim2,embedded-hal-async",
        "stm32g441cb,stm32_tim2,embedded-hal-async",
        "stm32g441kb,stm32_tim2,embedded-hal-async",
        "stm32g441mb,stm32_tim2,embedded-hal-async",
        "stm32g441rb,stm32_tim2,embedded-hal-async",
        "stm32g441vb,stm32_tim2,embedded-hal-async",
        "stm32g471cc,stm32_tim2,embedded-hal-async",
        "stm32g471ce,stm32_tim2,embedded-hal-async",
        "stm32g471mc,stm32_tim2,embedded-hal-async",
        "stm32g471me,stm32_tim2,embedded-hal-async",
        "stm32g471qc,stm32_tim2,embedded-hal-async",
        "stm32g471qe,stm32_tim2,embedded-hal-async",
        "stm32g471rc,stm32_tim2,embedded-hal-async",
        "stm32g471re,stm32_tim2,embedded-hal-async",
        "stm32g471vc,stm32_tim2,embedded-hal-async",
        "stm32g471ve,stm32_tim2,embedded-hal-async",
        "stm32g473cb,stm32_tim2,embedded-hal-async",
        "stm32g473cc,stm32_tim2,embedded-hal-async",
        "stm32g473ce,stm32_tim2,embedded-hal-async",
        "stm32g473mb,stm32_tim2,embedded-hal-async",
        "stm32g473mc,stm32_tim2,embedded-hal-async",
        "stm32g473me,stm32_tim2,embedded-hal-async",
        "stm32g473pb,stm32_tim2,embedded-hal-async",
        "stm32g473pc,stm32_tim2,embedded-hal-async",
        "stm32g473pe,stm32_tim2,embedded-hal-async",
        "stm32g473qb,stm32_tim2,embedded-hal-async",
        "stm32g473qc,stm32_tim2,embedded-hal-async",
        "stm32g473qe,stm32_tim2,embedded-hal-async",
        "stm32g473rb,stm32_tim2,embedded-hal-async",
        "stm32g473rc,stm32_tim2,embedded-hal-async",
        "stm32g473re,stm32_tim2,embedded-hal-async",
        "stm32g473vb,stm32_tim2,embedded-hal-async",
        "stm32g473vc,stm32_tim2,embedded-hal-async",
        "stm32g473ve,stm32_tim2,embedded-hal-async",
        "stm32g474cb,stm32_tim2,embedded-hal-async",
        "stm32g474cc,stm32_tim2,embedded-hal-async",
        "stm32g474ce,stm32_tim2,embedded-hal-async",
        "stm32g474mb,stm32_tim2,embedded-hal-async",
        "stm32g474mc,stm32_tim2,embedded-hal-async",
        "stm32g474me,stm32_tim2,embedded-hal-async",
        "stm32g474pb,stm32_tim2,embedded-hal-async",
        "stm32g474pc,stm32_tim2,embedded-hal-async",
        "stm32g474pe,stm32_tim2,embedded-hal-async",
        "stm32g474qb,stm32_tim2,embedded-hal-async",
        "stm32g474qc,stm32_tim2,embedded-hal-async",
        "stm32g474qe,stm32_tim2,embedded-hal-async",
        "stm32g474rb,stm32_tim2,embedded-hal-async",
        "stm32g474rc,stm32_tim2,embedded-hal-async",
        "stm32g474re,stm32_tim2,embedded-hal-async",
        "stm32g474vb,stm32_tim2,embedded-hal-async",
        "stm32g474vc,stm32_tim2,embedded-hal-async",
        "stm32g474ve,stm32_tim2,embedded-hal-async",
        "stm32g483ce,stm32_tim2,embedded-hal-async",
        "stm32g483me,stm32_tim2,embedded-hal-async",
        "stm32g483pe,stm32_tim2,embedded-hal-async",
        "stm32g483qe,stm32_tim2,embedded-hal-async",
        "stm32g483re,stm32_tim2,embedded-hal-async",
        "stm32g483ve,stm32_tim2,embedded-hal-async",
        "stm32g484ce,stm32_tim2,embedded-hal-async",
        "stm32g484me,stm32_tim2,embedded-hal-async",
        "stm32g484pe,stm32_tim2,embedded-hal-async",
        "stm32g484qe,stm32_tim2,embedded-hal-async",
        "stm32g484re,stm32_tim2,embedded-hal-async",
        "stm32g484ve,stm32_tim2,embedded-hal-async",
        "stm32g491cc,stm32_tim2,embedded-hal-async",
        "stm32g491ce,stm32_tim2,embedded-hal-async",
        "stm32g491kc,stm32_tim2,embedded-hal-async",
        "stm32g491ke,stm32_tim2,embedded-hal-async",
        "stm32g491mc,stm32_tim2,embedded-hal-async",
        "stm32g491me,stm32_tim2,embedded-hal-async",
        "stm32g491rc,stm32_tim2,embedded-hal-async",
        "stm32g491re,stm32_tim2,embedded-hal-async",
        "stm32g491vc,stm32_tim2,embedded-hal-async",
        "stm32g491ve,stm32_tim2,embedded-hal-async",
        "stm32g4a1ce,stm32_tim2,embedded-hal-async",
        "stm32g4a1ke,stm32_tim2,embedded-hal-async",
        "stm32g4a1me,stm32_tim2,embedded-hal-async",
        "stm32g4a1re,stm32_tim2,embedded-hal-async",
        "stm32g4a1ve,stm32_tim2,embedded-hal-async",
        "stm32h503cb,stm32_tim2,embedded-hal-async",
        "stm32h503eb,stm32_tim2,embedded-hal-async",
        "stm32h503kb,stm32_tim2,embedded-hal-async",
        "stm32h503rb,stm32_tim2,embedded-hal-async",
        "stm32h562ag,stm32_tim2,embedded-hal-async",
        "stm32h562ai,stm32_tim2,embedded-hal-async",
        "stm32h562ig,stm32_tim2,embedded-hal-async",
        "stm32h562ii,stm32_tim2,embedded-hal-async",
        "stm32h562rg,stm32_tim2,embedded-hal-async",
        "stm32h562ri,stm32_tim2,embedded-hal-async",
        "stm32h562vg,stm32_tim2,embedded-hal-async",
        "stm32h562vi,stm32_tim2,embedded-hal-async",
        "stm32h562zg,stm32_tim2,embedded-hal-async",
        "stm32h562zi,stm32_tim2,embedded-hal-async",
        "stm32h563ag,stm32_tim2,embedded-hal-async",
        "stm32h563ai,stm32_tim2,embedded-hal-async",
        "stm32h563ig,stm32_tim2,embedded-hal-async",
        "stm32h563ii,stm32_tim2,embedded-hal-async",
        "stm32h563mi,stm32_tim2,embedded-hal-async",
        "stm32h563rg,stm32_tim2,embedded-hal-async",
        "stm32h563ri,stm32_tim2,embedded-hal-async",
        "stm32h563vg,stm32_tim2,embedded-hal-async",
        "stm32h563vi,stm32_tim2,embedded-hal-async",
        "stm32h563zg,stm32_tim2,embedded-hal-async",
        "stm32h563zi,stm32_tim2,embedded-hal-async",
        "stm32h573ai,stm32_tim2,embedded-hal-async",
        "stm32h573ii,stm32_tim2,embedded-hal-async",
        "stm32h573mi,stm32_tim2,embedded-hal-async",
        "stm32h573ri,stm32_tim2,embedded-hal-async",
        "stm32h573vi,stm32_tim2,embedded-hal-async",
        "stm32h573zi,stm32_tim2,embedded-hal-async",
        "stm32h723ve,stm32_tim2,embedded-hal-async",
        "stm32h723vg,stm32_tim2,embedded-hal-async",
        "stm32h723ze,stm32_tim2,embedded-hal-async",
        "stm32h723zg,stm32_tim2,embedded-hal-async",
        "stm32h725ae,stm32_tim2,embedded-hal-async",
        "stm32h725ag,stm32_tim2,embedded-hal-async",
        "stm32h725ie,stm32_tim2,embedded-hal-async",
        "stm32h725ig,stm32_tim2,embedded-hal-async",
        "stm32h725re,stm32_tim2,embedded-hal-async",
        "stm32h725rg,stm32_tim2,embedded-hal-async",
        "stm32h725ve,stm32_tim2,embedded-hal-async",
        "stm32h725vg,stm32_tim2,embedded-hal-async",
        "stm32h725ze,stm32_tim2,embedded-hal-async",
        "stm32h725zg,stm32_tim2,embedded-hal-async",
        "stm32h730ab,stm32_tim2,embedded-hal-async",
        "stm32h730ib,stm32_tim2,embedded-hal-async",
        "stm32h730vb,stm32_tim2,embedded-hal-async",
        "stm32h730zb,stm32_tim2,embedded-hal-async",
        "stm32h733vg,stm32_tim2,embedded-hal-async",
        "stm32h733zg,stm32_tim2,embedded-hal-async",
        "stm32h735ag,stm32_tim2,embedded-hal-async",
        "stm32h735ig,stm32_tim2,embedded-hal-async",
        "stm32h735rg,stm32_tim2,embedded-hal-async",
        "stm32h735vg,stm32_tim2,embedded-hal-async",
        "stm32h735zg,stm32_tim2,embedded-hal-async",
        "stm32h742ag,stm32_tim2,embedded-hal-async",
        "stm32h742ai,stm32_tim2,embedded-hal-async",
        "stm32h742bg,stm32_tim2,embedded-hal-async",
        "stm32h742bi,stm32_tim2,embedded-hal-async",
        "stm32h742ig,stm32_tim2,embedded-hal-async",
        "stm32h742ii,stm32_tim2,embedded-hal-async",
        "stm32h742vg,stm32_tim2,embedded-hal-async",
        "stm32h742vi,stm32_tim2,embedded-hal-async",
        "stm32h742xg,stm32_tim2,embedded-hal-async",
        "stm32h742xi,stm32_tim2,embedded-hal-async",
        "stm32h742zg,stm32_tim2,embedded-hal-async",
        "stm32h742zi,stm32_tim2,embedded-hal-async",
        "stm32h743ag,stm32_tim2,embedded-hal-async",
        "stm32h743ai,stm32_tim2,embedded-hal-async",
        "stm32h743bg,stm32_tim2,embedded-hal-async",
        "stm32h743bi,stm32_tim2,embedded-hal-async",
        "stm32h743ig,stm32_tim2,embedded-hal-async",
        "stm32h743ii,stm32_tim2,embedded-hal-async",
        "stm32h743vg,stm32_tim2,embedded-hal-async",
        "stm32h743vi,stm32_tim2,embedded-hal-async",
        "stm32h743xg,stm32_tim2,embedded-hal-async",
        "stm32h743xi,stm32_tim2,embedded-hal-async",
        "stm32h743zg,stm32_tim2,embedded-hal-async",
        "stm32h743zi,stm32_tim2,embedded-hal-async",
        "stm32h750ib,stm32_tim2,embedded-hal-async",
        "stm32h750vb,stm32_tim2,embedded-hal-async",
        "stm32h750xb,stm32_tim2,embedded-hal-async",
        "stm32h750zb,stm32_tim2,embedded-hal-async",
        "stm32h753ai,stm32_tim2,embedded-hal-async",
        "stm32h753bi,stm32_tim2,embedded-hal-async",
        "stm32h753ii,stm32_tim2,embedded-hal-async",
        "stm32h753vi,stm32_tim2,embedded-hal-async",
        "stm32h753xi,stm32_tim2,embedded-hal-async",
        "stm32h753zi,stm32_tim2,embedded-hal-async",
        "stm32h7a3ag,stm32_tim2,embedded-hal-async",
        "stm32h7a3ai,stm32_tim2,embedded-hal-async",
        "stm32h7a3ig,stm32_tim2,embedded-hal-async",
        "stm32h7a3ii,stm32_tim2,embedded-hal-async",
        "stm32h7a3lg,stm32_tim2,embedded-hal-async",
        "stm32h7a3li,stm32_tim2,embedded-hal-async",
        "stm32h7a3ng,stm32_tim2,embedded-hal-async",
        "stm32h7a3ni,stm32_tim2,embedded-hal-async",
        "stm32h7a3qi,stm32_tim2,embedded-hal-async",
        "stm32h7a3rg,stm32_tim2,embedded-hal-async",
        "stm32h7a3ri,stm32_tim2,embedded-hal-async",
        "stm32h7a3vg,stm32_tim2,embedded-hal-async",
        "stm32h7a3vi,stm32_tim2,embedded-hal-async",
        "stm32h7a3zg,stm32_tim2,embedded-hal-async",
        "stm32h7a3zi,stm32_tim2,embedded-hal-async",
        "stm32h7b0ab,stm32_tim2,embedded-hal-async",
        "stm32h7b0ib,stm32_tim2,embedded-hal-async",
        "stm32h7b0rb,stm32_tim2,embedded-hal-async",
        "stm32h7b0vb,stm32_tim2,embedded-hal-async",
        "stm32h7b0zb,stm32_tim2,embedded-hal-async",
        "stm32h7b3ai,stm32_tim2,embedded-hal-async",
        "stm32h7b3ii,stm32_tim2,embedded-hal-async",
        "stm32h7b3li,stm32_tim2,embedded-hal-async",
        "stm32h7b3ni,stm32_tim2,embedded-hal-async",
        "stm32h7b3qi,stm32_tim2,embedded-hal-async",
        "stm32h7b3ri,stm32_tim2,embedded-hal-async",
        "stm32h7b3vi,stm32_tim2,embedded-hal-async",
        "stm32h7b3zi,stm32_tim2,embedded-hal-async",
        "stm32l010c6,stm32_tim2,embedded-hal-async",
        "stm32l010f4,stm32_tim2,embedded-hal-async",
        "stm32l010k4,stm32_tim2,embedded-hal-async",
        "stm32l010k8,stm32_tim2,embedded-hal-async",
        "stm32l010r8,stm32_tim2,embedded-hal-async",
        "stm32l010rb,stm32_tim2,embedded-hal-async",
        "stm32l011d3,stm32_tim2,embedded-hal-async",
        "stm32l011d4,stm32_tim2,embedded-hal-async",
        "stm32l011e3,stm32_tim2,embedded-hal-async",
        "stm32l011e4,stm32_tim2,embedded-hal-async",
        "stm32l011f3,stm32_tim2,embedded-hal-async",
        "stm32l011f4,stm32_tim2,embedded-hal-async",
        "stm32l011g3,stm32_tim2,embedded-hal-async",
        "stm32l011g4,stm32_tim2,embedded-hal-async",
        "stm32l011k3,stm32_tim2,embedded-hal-async",
        "stm32l011k4,stm32_tim2,embedded-hal-async",
        "stm32l021d4,stm32_tim2,embedded-hal-async",
        "stm32l021f4,stm32_tim2,embedded-hal-async",
        "stm32l021g4,stm32_tim2,embedded-hal-async",
        "stm32l021k4,stm32_tim2,embedded-hal-async",
        "stm32l031c4,stm32_tim2,embedded-hal-async",
        "stm32l031c6,stm32_tim2,embedded-hal-async",
        "stm32l031e4,stm32_tim2,embedded-hal-async",
        "stm32l031e6,stm32_tim2,embedded-hal-async",
        "stm32l031f4,stm32_tim2,embedded-hal-async",
        "stm32l031f6,stm32_tim2,embedded-hal-async",
        "stm32l031g4,stm32_tim2,embedded-hal-async",
        "stm32l031g6,stm32_tim2,embedded-hal-async",
        "stm32l031k4,stm32_tim2,embedded-hal-async",
        "stm32l031k6,stm32_tim2,embedded-hal-async",
        "stm32l041c4,stm32_tim2,embedded-hal-async",
        "stm32l041c6,stm32_tim2,embedded-hal-async",
        "stm32l041e6,stm32_tim2,embedded-hal-async",
        "stm32l041f6,stm32_tim2,embedded-hal-async",
        "stm32l041g6,stm32_tim2,embedded-hal-async",
        "stm32l041k6,stm32_tim2,embedded-hal-async",
        "stm32l051c6,stm32_tim2,embedded-hal-async",
        "stm32l051c8,stm32_tim2,embedded-hal-async",
        "stm32l051k6,stm32_tim2,embedded-hal-async",
        "stm32l051k8,stm32_tim2,embedded-hal-async",
        "stm32l051r6,stm32_tim2,embedded-hal-async",
        "stm32l051r8,stm32_tim2,embedded-hal-async",
        "stm32l051t6,stm32_tim2,embedded-hal-async",
        "stm32l051t8,stm32_tim2,embedded-hal-async",
        "stm32l052c6,stm32_tim2,embedded-hal-async",
        "stm32l052c8,stm32_tim2,embedded-hal-async",
        "stm32l052k6,stm32_tim2,embedded-hal-async",
        "stm32l052k8,stm32_tim2,embedded-hal-async",
        "stm32l052r6,stm32_tim2,embedded-hal-async",
        "stm32l052r8,stm32_tim2,embedded-hal-async",
        "stm32l052t6,stm32_tim2,embedded-hal-async",
        "stm32l052t8,stm32_tim2,embedded-hal-async",
        "stm32l053c6,stm32_tim2,embedded-hal-async",
        "stm32l053c8,stm32_tim2,embedded-hal-async",
        "stm32l053r6,stm32_tim2,embedded-hal-async",
        "stm32l053r8,stm32_tim2,embedded-hal-async",
        "stm32l062c8,stm32_tim2,embedded-hal-async",
        "stm32l062k8,stm32_tim2,embedded-hal-async",
        "stm32l063c8,stm32_tim2,embedded-hal-async",
        "stm32l063r8,stm32_tim2,embedded-hal-async",
        "stm32l071c8,stm32_tim2,embedded-hal-async",
        "stm32l071cb,stm32_tim2,embedded-hal-async",
        "stm32l071cz,stm32_tim2,embedded-hal-async",
        "stm32l071k8,stm32_tim2,embedded-hal-async",
        "stm32l071kb,stm32_tim2,embedded-hal-async",
        "stm32l071kz,stm32_tim2,embedded-hal-async",
        "stm32l071rb,stm32_tim2,embedded-hal-async",
        "stm32l071rz,stm32_tim2,embedded-hal-async",
        "stm32l071v8,stm32_tim2,embedded-hal-async",
        "stm32l071vb,stm32_tim2,embedded-hal-async",
        "stm32l071vz,stm32_tim2,embedded-hal-async",
        "stm32l072cb,stm32_tim2,embedded-hal-async",
        "stm32l072cz,stm32_tim2,embedded-hal-async",
        "stm32l072kb,stm32_tim2,embedded-hal-async",
        "stm32l072kz,stm32_tim2,embedded-hal-async",
        "stm32l072rb,stm32_tim2,embedded-hal-async",
        "stm32l072rz,stm32_tim2,embedded-hal-async",
        "stm32l072v8,stm32_tim2,embedded-hal-async",
        "stm32l072vb,stm32_tim2,embedded-hal-async",
        "stm32l072vz,stm32_tim2,embedded-hal-async",
        "stm32l073cb,stm32_tim2,embedded-hal-async",
        "stm32l073cz,stm32_tim2,embedded-hal-async",
        "stm32l073rb,stm32_tim2,embedded-hal-async",
        "stm32l073rz,stm32_tim2,embedded-hal-async",
        "stm32l073v8,stm32_tim2,embedded-hal-async",
        "stm32l073vb,stm32_tim2,embedded-hal-async",
        "stm32l073vz,stm32_tim2,embedded-hal-async",
        "stm32l081cb,stm32_tim2,embedded-hal-async",
        "stm32l081cz,stm32_tim2,embedded-hal-async",
        "stm32l081kz,stm32_tim2,embedded-hal-async",
        "stm32l082cz,stm32_tim2,embedded-hal-async",
        "stm32l082kb,stm32_tim2,embedded-hal-async",
        "stm32l082kz,stm32_tim2,embedded-hal-async",
        "stm32l083cb,stm32_tim2,embedded-hal-async",
        "stm32l083cz,stm32_tim2,embedded-hal-async",
        "stm32l083rb,stm32_tim2,embedded-hal-async",
        "stm32l083rz,stm32_tim2,embedded-hal-async",
        "stm32l083v8,stm32_tim2,embedded-hal-async",
        "stm32l083vb,stm32_tim2,embedded-hal-async",
        "stm32l083vz,stm32_tim2,embedded-hal-async",
        "stm32l100c6,stm32_tim2,embedded-hal-async",
        "stm32l100r8,stm32_tim2,embedded-hal-async",
        "stm32l100rb,stm32_tim2,embedded-hal-async",
        "stm32l100rc,stm32_tim2,embedded-hal-async",
        "stm32l151c6,stm32_tim2,embedded-hal-async",
        "stm32l151c8,stm32_tim2,embedded-hal-async",
        "stm32l151cb,stm32_tim2,embedded-hal-async",
        "stm32l151cc,stm32_tim2,embedded-hal-async",
        "stm32l151qc,stm32_tim2,embedded-hal-async",
        "stm32l151qd,stm32_tim2,embedded-hal-async",
        "stm32l151qe,stm32_tim2,embedded-hal-async",
        "stm32l151r6,stm32_tim2,embedded-hal-async",
        "stm32l151r8,stm32_tim2,embedded-hal-async",
        "stm32l151rb,stm32_tim2,embedded-hal-async",
        "stm32l151rc,stm32_tim2,embedded-hal-async",
        "stm32l151rd,stm32_tim2,embedded-hal-async",
        "stm32l151re,stm32_tim2,embedded-hal-async",
        "stm32l151uc,stm32_tim2,embedded-hal-async",
        "stm32l151v8,stm32_tim2,embedded-hal-async",
        "stm32l151vb,stm32_tim2,embedded-hal-async",
        "stm32l151vc,stm32_tim2,embedded-hal-async",
        "stm32l151vd,stm32_tim2,embedded-hal-async",
        "stm32l151ve,stm32_tim2,embedded-hal-async",
        "stm32l151zc,stm32_tim2,embedded-hal-async",
        "stm32l151zd,stm32_tim2,embedded-hal-async",
        "stm32l151ze,stm32_tim2,embedded-hal-async",
        "stm32l152c6,stm32_tim2,embedded-hal-async",
        "stm32l152c8,stm32_tim2,embedded-hal-async",
        "stm32l152cb,stm32_tim2,embedded-hal-async",
        "stm32l152cc,stm32_tim2,embedded-hal-async",
        "stm32l152qc,stm32_tim2,embedded-hal-async",
        "stm32l152qd,stm32_tim2,embedded-hal-async",
        "stm32l152qe,stm32_tim2,embedded-hal-async",
        "stm32l152r6,stm32_tim2,embedded-hal-async",
        "stm32l152r8,stm32_tim2,embedded-hal-async",
        "stm32l152rb,stm32_tim2,embedded-hal-async",
        "stm32l152rc,stm32_tim2,embedded-hal-async",
        "stm32l152rd,stm32_tim2,embedded-hal-async",
        "stm32l152re,stm32_tim2,embedded-hal-async",
        "stm32l152uc,stm32_tim2,embedded-hal-async",
        "stm32l152v8,stm32_tim2,embedded-hal-async",
        "stm32l152vb,stm32_tim2,embedded-hal-async",
        "stm32l152vc,stm32_tim2,embedded-hal-async",
        "stm32l152vd,stm32_tim2,embedded-hal-async",
        "stm32l152ve,stm32_tim2,embedded-hal-async",
        "stm32l152zc,stm32_tim2,embedded-hal-async",
        "stm32l152zd,stm32_tim2,embedded-hal-async",
        "stm32l152ze,stm32_tim2,embedded-hal-async",
        "stm32l162qc,stm32_tim2,embedded-hal-async",
        "stm32l162qd,stm32_tim2,embedded-hal-async",
        "stm32l162rc,stm32_tim2,embedded-hal-async",
        "stm32l162rd,stm32_tim2,embedded-hal-async",
        "stm32l162re,stm32_tim2,embedded-hal-async",
        "stm32l162vc,stm32_tim2,embedded-hal-async",
        "stm32l162vd,stm32_tim2,embedded-hal-async",
        "stm32l162ve,stm32_tim2,embedded-hal-async",
        "stm32l162zc,stm32_tim2,embedded-hal-async",
        "stm32l162zd,stm32_tim2,embedded-hal-async",
        "stm32l162ze,stm32_tim2,embedded-hal-async",
        "stm32l412c8,stm32_tim2,embedded-hal-async",
        "stm32l412cb,stm32_tim2,embedded-hal-async",
        "stm32l412k8,stm32_tim2,embedded-hal-async",
        "stm32l412kb,stm32_tim2,embedded-hal-async",
        "stm32l412r8,stm32_tim2,embedded-hal-async",
        "stm32l412rb,stm32_tim2,embedded-hal-async",
        "stm32l412t8,stm32_tim2,embedded-hal-async",
        "stm32l412tb,stm32_tim2,embedded-hal-async",
        "stm32l422cb,stm32_tim2,embedded-hal-async",
        "stm32l422kb,stm32_tim2,embedded-hal-async",
        "stm32l422rb,stm32_tim2,embedded-hal-async",
        "stm32l422tb,stm32_tim2,embedded-hal-async",
        "stm32l431cb,stm32_tim2,embedded-hal-async",
        "stm32l431cc,stm32_tim2,embedded-hal-async",
        "stm32l431kb,stm32_tim2,embedded-hal-async",
        "stm32l431kc,stm32_tim2,embedded-hal-async",
        "stm32l431rb,stm32_tim2,embedded-hal-async",
        "stm32l431rc,stm32_tim2,embedded-hal-async",
        "stm32l431vc,stm32_tim2,embedded-hal-async",
        "stm32l432kb,stm32_tim2,embedded-hal-async",
        "stm32l432kc,stm32_tim2,embedded-hal-async",
        "stm32l433cb,stm32_tim2,embedded-hal-async",
        "stm32l433cc,stm32_tim2,embedded-hal-async",
        "stm32l433rb,stm32_tim2,embedded-hal-async",
        "stm32l433rc,stm32_tim2,embedded-hal-async",
        "stm32l433vc,stm32_tim2,embedded-hal-async",
        "stm32l442kc,stm32_tim2,embedded-hal-async",
        "stm32l443cc,stm32_tim2,embedded-hal-async",
        "stm32l443rc,stm32_tim2,embedded-hal-async",
        "stm32l443vc,stm32_tim2,embedded-hal-async",
        "stm32l451cc,stm32_tim2,embedded-hal-async",
        "stm32l451ce,stm32_tim2,embedded-hal-async",
        "stm32l451rc,stm32_tim2,embedded-hal-async",
        "stm32l451re,stm32_tim2,embedded-hal-async",
        "stm32l451vc,stm32_tim2,embedded-hal-async",
        "stm32l451ve,stm32_tim2,embedded-hal-async",
        "stm32l452cc,stm32_tim2,embedded-hal-async",
        "stm32l452ce,stm32_tim2,embedded-hal-async",
        "stm32l452rc,stm32_tim2,embedded-hal-async",
        "stm32l452re,stm32_tim2,embedded-hal-async",
        "stm32l452vc,stm32_tim2,embedded-hal-async",
        "stm32l452ve,stm32_tim2,embedded-hal-async",
        "stm32l462ce,stm32_tim2,embedded-hal-async",
        "stm32l462re,stm32_tim2,embedded-hal-async",
        "stm32l462ve,stm32_tim2,embedded-hal-async",
        "stm32l471qe,stm32_tim2,embedded-hal-async",
        "stm32l471qg,stm32_tim2,embedded-hal-async",
        "stm32l471re,stm32_tim2,embedded-hal-async",
        "stm32l471rg,stm32_tim2,embedded-hal-async",
        "stm32l471ve,stm32_tim2,embedded-hal-async",
        "stm32l471vg,stm32_tim2,embedded-hal-async",
        "stm32l471ze,stm32_tim2,embedded-hal-async",
        "stm32l471zg,stm32_tim2,embedded-hal-async",
        "stm32l475rc,stm32_tim2,embedded-hal-async",
        "stm32l475re,stm32_tim2,embedded-hal-async",
        "stm32l475rg,stm32_tim2,embedded-hal-async",
        "stm32l475vc,stm32_tim2,embedded-hal-async",
        "stm32l475ve,stm32_tim2,embedded-hal-async",
        "stm32l475vg,stm32_tim2,embedded-hal-async",
        "stm32l476je,stm32_tim2,embedded-hal-async",
        "stm32l476jg,stm32_tim2,embedded-hal-async",
        "stm32l476me,stm32_tim2,embedded-hal-async",
        "stm32l476mg,stm32_tim2,embedded-hal-async",
        "stm32l476qe,stm32_tim2,embedded-hal-async",
        "stm32l476qg,stm32_tim2,embedded-hal-async",
        "stm32l476rc,stm32_tim2,embedded-hal-async",
        "stm32l476re,stm32_tim2,embedded-hal-async",
        "stm32l476rg,stm32_tim2,embedded-hal-async",
        "stm32l476vc,stm32_tim2,embedded-hal-async",
        "stm32l476ve,stm32_tim2,embedded-hal-async",
        "stm32l476vg,stm32_tim2,embedded-hal-async",
        "stm32l476ze,stm32_tim2,embedded-hal-async",
        "stm32l476zg,stm32_tim2,embedded-hal-async",
        "stm32l486jg,stm32_tim2,embedded-hal-async",
        "stm32l486qg,stm32_tim2,embedded-hal-async",
        "stm32l486rg,stm32_tim2,embedded-hal-async",
        "stm32l486vg,stm32_tim2,embedded-hal-async",
        "stm32l486zg,stm32_tim2,embedded-hal-async",
        "stm32l496ae,stm32_tim2,embedded-hal-async",
        "stm32l496ag,stm32_tim2,embedded-hal-async",
        "stm32l496qe,stm32_tim2,embedded-hal-async",
        "stm32l496qg,stm32_tim2,embedded-hal-async",
        "stm32l496re,stm32_tim2,embedded-hal-async",
        "stm32l496rg,stm32_tim2,embedded-hal-async",
        "stm32l496ve,stm32_tim2,embedded-hal-async",
        "stm32l496vg,stm32_tim2,embedded-hal-async",
        "stm32l496wg,stm32_tim2,embedded-hal-async",
        "stm32l496ze,stm32_tim2,embedded-hal-async",
        "stm32l496zg,stm32_tim2,embedded-hal-async",
        "stm32l4a6ag,stm32_tim2,embedded-hal-async",
        "stm32l4a6qg,stm32_tim2,embedded-hal-async",
        "stm32l4a6rg,stm32_tim2,embedded-hal-async",
        "stm32l4a6vg,stm32_tim2,embedded-hal-async",
        "stm32l4a6zg,stm32_tim2,embedded-hal-async",
        "stm32l4p5ae,stm32_tim2,embedded-hal-async",
        "stm32l4p5ag,stm32_tim2,embedded-hal-async",
        "stm32l4p5ce,stm32_tim2,embedded-hal-async",
        "stm32l4p5cg,stm32_tim2,embedded-hal-async",
        "stm32l4p5qe,stm32_tim2,embedded-hal-async",
        "stm32l4p5qg,stm32_tim2,embedded-hal-async",
        "stm32l4p5re,stm32_tim2,embedded-hal-async",
        "stm32l4p5rg,stm32_tim2,embedded-hal-async",
        "stm32l4p5ve,stm32_tim2,embedded-hal-async",
        "stm32l4p5vg,stm32_tim2,embedded-hal-async",
        "stm32l4p5ze,stm32_tim2,embedded-hal-async",
        "stm32l4p5zg,stm32_tim2,embedded-hal-async",
        "stm32l4q5ag,stm32_tim2,embedded-hal-async",
        "stm32l4q5cg,stm32_tim2,embedded-hal-async",
        "stm32l4q5qg,stm32_tim2,embedded-hal-async",
        "stm32l4q5rg,stm32_tim2,embedded-hal-async",
        "stm32l4q5vg,stm32_tim2,embedded-hal-async",
        "stm32l4q5zg,stm32_tim2,embedded-hal-async",
        "stm32l4r5ag,stm32_tim2,embedded-hal-async",
        "stm32l4r5ai,stm32_tim2,embedded-hal-async",
        "stm32l4r5qg,stm32_tim2,embedded-hal-async",
        "stm32l4r5qi,stm32_tim2,embedded-hal-async",
        "stm32l4r5vg,stm32_tim2,embedded-hal-async",
        "stm32l4r5vi,stm32_tim2,embedded-hal-async",
        "stm32l4r5zg,stm32_tim2,embedded-hal-async",
        "stm32l4r5zi,stm32_tim2,embedded-hal-async",
        "stm32l4r7ai,stm32_tim2,embedded-hal-async",
        "stm32l4r7vi,stm32_tim2,embedded-hal-async",
        "stm32l4r7zi,stm32_tim2,embedded-hal-async",
        "stm32l4r9ag,stm32_tim2,embedded-hal-async",
        "stm32l4r9ai,stm32_tim2,embedded-hal-async",
        "stm32l4r9vg,stm32_tim2,embedded-hal-async",
        "stm32l4r9vi,stm32_tim2,embedded-hal-async",
        "stm32l4r9zg,stm32_tim2,embedded-hal-async",
        "stm32l4r9zi,stm32_tim2,embedded-hal-async",
        "stm32l4s5ai,stm32_tim2,embedded-hal-async",
        "stm32l4s5qi,stm32_tim2,embedded-hal-async",
        "stm32l4s5vi,stm32_tim2,embedded-hal-async",
        "stm32l4s5zi,stm32_tim2,embedded-hal-async",
        "stm32l4s7ai,stm32_tim2,embedded-hal-async",
        "stm32l4s7vi,stm32_tim2,embedded-hal-async",
        "stm32l4s7zi,stm32_tim2,embedded-hal-async",
        "stm32l4s9ai,stm32_tim2,embedded-hal-async",
        "stm32l4s9vi,stm32_tim2,embedded-hal-async",
        "stm32l4s9zi,stm32_tim2,embedded-hal-async",
        "stm32l552cc,stm32_tim2,embedded-hal-async",
        "stm32l552ce,stm32_tim2,embedded-hal-async",
        "stm32l552me,stm32_tim2,embedded-hal-async",
        "stm32l552qc,stm32_tim2,embedded-hal-async",
        "stm32l552qe,stm32_tim2,embedded-hal-async",
        "stm32l552rc,stm32_tim2,embedded-hal-async",
        "stm32l552re,stm32_tim2,embedded-hal-async",
        "stm32l552vc,stm32_tim2,embedded-hal-async",
        "stm32l552ve,stm32_tim2,embedded-hal-async",
        "stm32l552zc,stm32_tim2,embedded-hal-async",
        "stm32l552ze,stm32_tim2,embedded-hal-async",
        "stm32l562ce,stm32_tim2,embedded-hal-async",
        "stm32l562me,stm32_tim2,embedded-hal-async",
        "stm32l562qe,stm32_tim2,embedded-hal-async",
        "stm32l562re,stm32_tim2,embedded-hal-async",
        "stm32l562ve,stm32_tim2,embedded-hal-async",
        "stm32l562ze,stm32_tim2,embedded-hal-async",
        "stm32u535cb,stm32_tim2,embedded-hal-async",
        "stm32u535cc,stm32_tim2,embedded-hal-async",
        "stm32u535ce,stm32_tim2,embedded-hal-async",
        "stm32u535je,stm32_tim2,embedded-hal-async",
        "stm32u535nc,stm32_tim2,embedded-hal-async",
        "stm32u535ne,stm32_tim2,embedded-hal-async",
        "stm32u535rb,stm32_tim2,embedded-hal-async",
        "stm32u535rc,stm32_tim2,embedded-hal-async",
        "stm32u535re,stm32_tim2,embedded-hal-async",
        "stm32u535vc,stm32_tim2,embedded-hal-async",
        "stm32u535ve,stm32_tim2,embedded-hal-async",
        "stm32u545ce,stm32_tim2,embedded-hal-async",
        "stm32u545je,stm32_tim2,embedded-hal-async",
        "stm32u545ne,stm32_tim2,embedded-hal-async",
        "stm32u545re,stm32_tim2,embedded-hal-async",
        "stm32u545ve,stm32_tim2,embedded-hal-async",
        "stm32u575ag,stm32_tim2,embedded-hal-async",
        "stm32u575ai,stm32_tim2,embedded-hal-async",
        "stm32u575cg,stm32_tim2,embedded-hal-async",
        "stm32u575ci,stm32_tim2,embedded-hal-async",
        "stm32u575og,stm32_tim2,embedded-hal-async",
        "stm32u575oi,stm32_tim2,embedded-hal-async",
        "stm32u575qg,stm32_tim2,embedded-hal-async",
        "stm32u575qi,stm32_tim2,embedded-hal-async",
        "stm32u575rg,stm32_tim2,embedded-hal-async",
        "stm32u575ri,stm32_tim2,embedded-hal-async",
        "stm32u575vg,stm32_tim2,embedded-hal-async",
        "stm32u575vi,stm32_tim2,embedded-hal-async",
        "stm32u575zg,stm32_tim2,embedded-hal-async",
        "stm32u575zi,stm32_tim2,embedded-hal-async",
        "stm32u585ai,stm32_tim2,embedded-hal-async",
        "stm32u585ci,stm32_tim2,embedded-hal-async",
        "stm32u585oi,stm32_tim2,embedded-hal-async",
        "stm32u585qi,stm32_tim2,embedded-hal-async",
        "stm32u585ri,stm32_tim2,embedded-hal-async",
        "stm32u585vi,stm32_tim2,embedded-hal-async",
        "stm32u585zi,stm32_tim2,embedded-hal-async",
        "stm32u595ai,stm32_tim2,embedded-hal-async",
        "stm32u595aj,stm32_tim2,embedded-hal-async",
        "stm32u595qi,stm32_tim2,embedded-hal-async",
        "stm32u595qj,stm32_tim2,embedded-hal-async",
        "stm32u595ri,stm32_tim2,embedded-hal-async",
        "stm32u595rj,stm32_tim2,embedded-hal-async",
        "stm32u595vi,stm32_tim2,embedded-hal-async",
        "stm32u595vj,stm32_tim2,embedded-hal-async",
        "stm32u595zi,stm32_tim2,embedded-hal-async",
        "stm32u595zj,stm32_tim2,embedded-hal-async",
        "stm32u599bj,stm32_tim2,embedded-hal-async",
        "stm32u599ni,stm32_tim2,embedded-hal-async",
        "stm32u599nj,stm32_tim2,embedded-hal-async",
        "stm32u599vi,stm32_tim2,embedded-hal-async",
        "stm32u599vj,stm32_tim2,embedded-hal-async",
        "stm32u599zi,stm32_tim2,embedded-hal-async",
        "stm32u599zj,stm32_tim2,embedded-hal-async",
        "stm32u5a5aj,stm32_tim2,embedded-hal-async",
        "stm32u5a5qj,stm32_tim2,embedded-hal-async",
        "stm32u5a5rj,stm32_tim2,embedded-hal-async",
        "stm32u5a5vj,stm32_tim2,embedded-hal-async",
        "stm32u5a5zj,stm32_tim2,embedded-hal-async",
        "stm32u5a9bj,stm32_tim2,embedded-hal-async",
        "stm32u5a9nj,stm32_tim2,embedded-hal-async",
        "stm32u5a9vj,stm32_tim2,embedded-hal-async",
        "stm32u5a9zj,stm32_tim2,embedded-hal-async",
        "stm32wb10cc,stm32_tim2,embedded-hal-async",
        "stm32wb15cc,stm32_tim2,embedded-hal-async",
        "stm32wb30ce,stm32_tim2,embedded-hal-async",
        "stm32wb35cc,stm32_tim2,embedded-hal-async",
        "stm32wb35ce,stm32_tim2,embedded-hal-async",
        "stm32wb50cg,stm32_tim2,embedded-hal-async",
        "stm32wb55cc,stm32_tim2,embedded-hal-async",
        "stm32wb55ce,stm32_tim2,embedded-hal-async",
        "stm32wb55cg,stm32_tim2,embedded-hal-async",
        "stm32wb55rc,stm32_tim2,embedded-hal-async",
        "stm32wb55re,stm32_tim2,embedded-hal-async",
        "stm32wb55rg,stm32_tim2,embedded-hal-async",
        "stm32wb55vc,stm32_tim2,embedded-hal-async",
        "stm32wb55ve,stm32_tim2,embedded-hal-async",
        "stm32wb55vg,stm32_tim2,embedded-hal-async",
        "stm32wb55vy,stm32_tim2,embedded-hal-async",
        "stm32wl54cc-cm4,stm32_tim2,embedded-hal-async",
        "stm32wl54cc-cm0p,stm32_tim2,embedded-hal-async",
        "stm32wl54jc-cm4,stm32_tim2,embedded-hal-async",
        "stm32wl54jc-cm0p,stm32_tim2,embedded-hal-async",
        "stm32wl55cc-cm4,stm32_tim2,embedded-hal-async",
        "stm32wl55cc-cm0p,stm32_tim2,embedded-hal-async",
        "stm32wl55jc-cm4,stm32_tim2,embedded-hal-async",
        "stm32wl55jc-cm0p,stm32_tim2,embedded-hal-async",
        "stm32wle4c8,stm32_tim2,embedded-hal-async",
        "stm32wle4cb,stm32_tim2,embedded-hal-async",
        "stm32wle4cc,stm32_tim2,embedded-hal-async",
        "stm32wle4j8,stm32_tim2,embedded-hal-async",
        "stm32wle4jb,stm32_tim2,embedded-hal-async",
        "stm32wle4jc,stm32_tim2,embedded-hal-async",
        "stm32wle5c8,stm32_tim2,embedded-hal-async",
        "stm32wle5cb,stm32_tim2,embedded-hal-async",
        "stm32wle5cc,stm32_tim2,embedded-hal-async",
        "stm32wle5j8,stm32_tim2,embedded-hal-async",
        "stm32wle5jb,stm32_tim2,embedded-hal-async",
        "stm32wle5jc,stm32_tim2,embedded-hal-async",
    ];
}
